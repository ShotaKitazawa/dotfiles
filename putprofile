#!/usr/bin/env bash
# Auther: Kitazawa

# !! DOTFILE OVERWRITE !!

path=$(cd $(dirname $0) && pwd)

switch_env(){
  if [[ "$(uname)" = 'Darwin' ]]; then
    echo $2
  elif [[ "$(uname -r)" =~ ^.*-Microsoft$ ]]; then
    echo $3
  elif [[ "$(uname)" = 'Linux' ]]; then
    echo $1
  elif [[ "$(uname)" = 'FreeBSD' ]]; then
    echo $4
  fi
}

deploylink(){
  if [ -L $2/$1 ]; then
    echo "$1 has already deployed to $2/"
    return 0
  elif [ -e $2/$1 ]; then
    rm $2/$1 -rf
  fi
  ln -s $path/$1 $2/$1
  echo "$1 was deployed to $2/"
}


if [ "$(uname)" = 'Darwin' ]; then deploylink .inputrc; fi
deploylink .gitconfig $HOME
deploylink .gitignore $HOME
deploylink .tmux.conf $HOME
deploylink .vim $HOME
deploylink .bashrc_self $HOME
deploylink .gdbinit $HOME
deploylink .config $HOME
deploylink .vrapperrc $HOME
deploylink .latexmkrc $HOME

# let .bashrc read .bashrc_self
grep .bashrc_self ~/.bashrc > /dev/null 2>&1
if [ $? != 0 ]; then
  echo "if [ -f ~/.bashrc_self ]; then source ~/.bashrc_self; fi" >> ~/.bashrc
fi

# vim-undofile folder
if [ ! -d ~/.vimundo ]; then
  mkdir ~/.vimundo
  echo "mkdir ~/.vimundo"
fi

# link memo.conf for environment
cd ~/.config/memo
if [ -L config.toml ]; then unlink config.toml; fi
ln -s $(switch_env config-linux.toml config-mac.toml config-linux.toml) config.toml

# download peda (gdb extention)
if [ ! -d ~/.peda ]; then
  git clone https://github.com/longld/peda ~/.peda > /dev/null 2>&1
  echo "downloaded peda"
fi

# install Powerline fonts for lightline.vim
cd ~
if [ ! -d ~/.fonts ]; then
  git clone https://github.com/powerline/fonts.git ~/.fonts > /dev/null 2>&1
  if [ $? = 0 ]; then
    cd .fonts
    if ./install.sh > /dev/null; then
      echo "install Powerline fonts"
    else
      echo "error: failed to download Powerline fonts"
    fi
  else
    echo "error: failed to download Powerline fonts"
  fi
fi

if [ "$(whoami)" = "root" ]; then

  # deploy systemd service file (for Linux)
  if [ "$(switch_env linux)" = "linux" ]; then
    pre_path=$path
    path=$path/.services
    for service in $(ls $pre_path/.services/); do
      deploylink $service /etc/systemd/system
    done
    systemctl daemon-reload
    path=$pre_path
  fi

fi
