""""""""""""""""""""""""""""""
" Plugin's setting
""""""""""""""""""""""""""""""
function! Plugin()
	" General {
	NeoBundle 'Shougo/unite.vim'
	NeoBundle 'kana/vim-operator-user'
	NeoBundle 'kana/vim-submode'
	NeoBundle 'scrooloose/nerdtree'
	NeoBundle 'deton/jasegment.vim'
	"" Color {
	NeoBundle 'w0ng/vim-hybrid'
	NeoBundle 'nanotech/jellybeans.vim'
	NeoBundle 'ConradIrwin/vim-bracketed-paste'
	"" }
	"" http://qiita.com/MoriKen/items/24d1dde0c40e59a61edf {
	"NeoBundle 'Shougo/neocomplete.vim'
	NeoBundle 'Shougo/vimproc.vim', {
	            \ 'build' : {
	            \ 'windows' : 'make -f make_mingw32.mak',
	            \ 'cygwin' : 'make -f make_cygwin.mak',
	            \ 'mac' : 'make -f make_mac.mak',
	            \ 'unix' : 'make -f make_unix.mak',
	            \ },
	            \ }
	NeoBundle 'justmao945/vim-clang'
	"" }
	" }
	" C++ {
	NeoBundle 'thinca/vim-quickrun'
	NeoBundle 'rhysd/vim-clang-format'
	NeoBundle 'Shougo/neoinclude.vim'
	" }
	" Python {
	NeoBundle 'davidhalter/jedi-vim'
	" }
endfunction
""""""""""""""""""""""""""""""
if has('vim_starting')
  set nocompatible               " Be iMproved

  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#begin(expand('~/.vim/bundle/'))

call Plugin()

call neobundle#end()

filetype plugin indent on

NeoBundleCheck
""""""""""""""""""""""""""""""


"""""""""""""""""""""""""""""
" http://qiita.com/MoriKen/items/24d1dde0c40e59a61edf
"""""""""""""""""""""""""""""
"let g:neocomplete#enable_at_startup = 1
"if !exists('g:neocomplete#force_omni_input_patterns')
"	let g:neocomplete#force_omni_input_patterns = {}
"endif
"	let g:neocomplete#force_overwrite_completefunc = 1
"	let g:neocomplete#force_omni_input_patterns.c = '[^.[:digit:] *\t]\%(\.\|->\)'
"	let g:neocomplete#force_omni_input_patterns.cpp = '[^.[:digit:] *\t]\%(\.\|->\)\|\h\w*::'
"
"let g:clang_auto = 0
"let g:clang_complete_auto = 0
"let g:clang_auto_select = 0
"let g:clang_use_library = 1
"
"let g:clang_c_completeopt   = 'menuone'
"let g:clang_cpp_completeopt = 'menuone'
"
"if executable('clang-3.6')
"	let g:clang_exec = 'clang-3.6'
"elseif executable('clang-3.5')
"	let g:clang_exec = 'clang-3.5'
"elseif executable('clang-3.4')
"	let g:clang_exec = 'clang-3.4'
"else
"        let g:clang_exec = 'clang'
"endif
"
"if executable('clang-format-3.6')
"    let g:clang_format_exec = 'clang-format-3.6'
"elseif executable('clang-format-3.5')
"    let g:clang_format_exec = 'clang-format-3.5'
"elseif executable('clang-format-3.4')
"    let g:clang_format_exec = 'clang-format-3.4'
"else
"    let g:clang_exec = 'clang-format'
"endif
"
"let g:clang_c_options = '-std=c11'
"let g:clang_cpp_options = '-std=c++11 -stdlib=libc++'
"""""""""""""""""""""""""""""


"""""""""""""""""""""""""""""
" http://qiita.com/m_mysht/items/56e5d5a17d07a64d8b65
"""""""""""""""""""""""""""""
"inoremap { {}<LEFT>
"inoremap [ []<LEFT>
"inoremap ( ()<LEFT>
"inoremap " ""<LEFT>
"inoremap ' ''<LEFT>
"
"function! DeleteParenthesesAdjoin()
"    let pos = col(".") - 1  " カーソルの位置．1からカウント
"    let str = getline(".")  " カーソル行の文字列
"    let parentLList = ["(", "[", "{", "\'", "\""]
"    let parentRList = [")", "]", "}", "\'", "\""]
"    let cnt = 0
"
"    let output = ""
"
"    " カーソルが行末の場合
"    if pos == strlen(str)
"        return "\b"
"    endif
"    for c in parentLList
"        " カーソルの左右が同種の括弧
"        if str[pos-1] == c && str[pos] == parentRList[cnt]
"            call cursor(line("."), pos + 2)
"            let output = "\b"
"            break
"        endif
"        let cnt += 1
"    endfor
"    return output."\b"
"endfunction
"" BackSpaceに割り当て
"inoremap <silent> <BS> <C-R>=DeleteParenthesesAdjoin()<CR>
"""""""""""""""""""""""""""""


"""""""""""""""""""""""""""""
" Other setting
"""""""""""""""""""""""""""""
syntax on
colorscheme hybrid

set nocompatible
set backspace=indent,eol,start
set undofile
set undodir=~/vimundo/
set clipboard+=unnamed
set background=dark
set encoding=utf-8
"set fileencodings=iso-2022-jp,cp932,sjis,euc-jp,utf-8
set hlsearch
set ruler
set title
set incsearch
set wildmenu wildmode=list:full
set tabstop=4
set shiftwidth=4

map ,x <Plug>(operator-clang-format)
noremap <C-z> <C-a>
inoremap <C-e> <Esc>$a
inoremap <C-a> <Esc>^i
noremap <C-e> <Esc>$
noremap <C-a> <Esc>^
noremap PP "0p
noremap x "_x
noremap <ESC><ESC> :noh<CR>
nnoremap <space>. :<c-u>new ~/.vimrc<CR>
inoremap jj <Esc>
nnoremap :tree :NERDTreeToggle
noremap <C-z> <C-a>

" http://nanasi.jp/articles/howto/file/expand.html
nnoremap s <Nop>
nnoremap sj <C-w>j
nnoremap sk <C-w>k
nnoremap sl <C-w>l
nnoremap sh <C-w>h
nnoremap sJ <C-w>J
nnoremap sK <C-w>K
nnoremap sL <C-w>L
nnoremap sH <C-w>H
nnoremap sn gt
nnoremap sp gT
nnoremap sr <C-w>r
nnoremap s= <C-w>=
nnoremap sw <C-w>w
nnoremap so <C-w>_<C-w>|
nnoremap sO <C-w>=
nnoremap sN :<C-u>bn<CR>
nnoremap sP :<C-u>bp<CR>
nnoremap st :<C-u>tabnew<CR>
nnoremap sT :<C-u>Unite tab<CR>
nnoremap ss :<C-u>sp<CR>
nnoremap sv :<C-u>vs<CR>
nnoremap sq :<C-u>q<CR>
nnoremap sQ :<C-u>bd<CR>
nnoremap sb :<C-u>Unite buffer_tab -buffer-name=file<CR>
nnoremap sB :<C-u>Unite buffer -buffer-name=file<CR>
call submode#enter_with('bufmove', 'n', '', 's>', '<C-w>>')
	call submode#enter_with('bufmove', 'n', '', 's<', '<C-w><')
	call submode#enter_with('bufmove', 'n', '', 's+', '<C-w>+')
call submode#enter_with('bufmove', 'n', '', 's-', '<C-w>-')
call submode#map('bufmove', 'n', '', '>', '<C-w>>')
call submode#map('bufmove', 'n', '', '<', '<C-w><')
call submode#map('bufmove', 'n', '', '+', '<C-w>+')
call submode#map('bufmove', 'n', '', '-', '<C-w>-')
"

if has("autocmd")
  " Highlight TODO, FIXME, NOTE, etc.
  if v:version > 701
    autocmd Syntax * call matchadd('Todo',  '\W\zs\(TODO\|FIXME\|CHANGED\|XXX\|BUG\|HACK\)')
    autocmd Syntax * call matchadd('Debug', '\W\zs\(NOTE\|INFO\|IDEA\)')
  endif
endif

autocmd BufRead,BufNewFile *.py setfiletype python.vim
autocmd BufRead,BufNewFile *.cpp setfiletype cp.vim
"""""""""""""""""""""""""""""


"""""""""""""""""""""""""""""
" MacVim setting
"""""""""""""""""""""""""""""
if has('gui_macvim')
	"colorschme macvim
	set background=dark
	silent! colorscheme jellybeans
	set showtabline=2	" タブを常に表示
	set imdisable	" IMを無効化
	set transparency=10	" 透明度を指定
	set antialias
	set guifont=Monaco:h18
	set fuoptions=maxvert,maxhorz
	set mouse=a
	set ttymouse=xterm2
endif
"""""""""""""""""""""""""""""
