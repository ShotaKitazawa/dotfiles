# Color
[[plugins]]
repo = 'joshdick/onedark.vim'
[[plugins]]
repo = 'w0ng/vim-hybrid'
[[plugins]]
repo = 'nanotech/jellybeans.vim'
[[plugins]]
repo = 'vim-scripts/tir_black'
[[plugins]]
repo = 'tomasr/molokai'
[[plugins]]
repo = 'vim-scripts/Wombat'

# TODO
## snippet
#[[plugins]]
#repo = 'Shougo/neosnippet'
#[[plugins]]
#repo = 'Shougo/neosnippet-snippets'
# template 呼び出し
[[plugins]]
repo = 'mattn/sonictemplate-vim'
hook_add = '''
  let g:sonictemplate_vim_template_dir = [
      \ '~/.cache/sonictemplate'
      \]
'''

# コンテキストによって filetype 自動切り替え
[[plugins]]
repo = 'Shougo/context_filetype.vim'

# 窓移動系
[[plugins]]
repo = 'kana/vim-operator-user'
[[plugins]]
repo = 'kana/vim-submode'
hook_add = '''
  call submode#enter_with('bufmove', 'n', '', 's>', '<C-w>>')
  call submode#enter_with('bufmove', 'n', '', 's<', '<C-w><')
  call submode#enter_with('bufmove', 'n', '', 's+', '<C-w>+')
  call submode#enter_with('bufmove', 'n', '', 's-', '<C-w>-')
  call submode#map('bufmove', 'n', '', '>', '<C-w>>')
  call submode#map('bufmove', 'n', '', '<', '<C-w><')
  call submode#map('bufmove', 'n', '', '+', '<C-w>+')
  call submode#map('bufmove', 'n', '', '-', '<C-w>-')
'''

# TODO
# ファイル探索
[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  nnoremap tr :<C-u>NERDTreeToggle<CR>
  let g:NERDTreeShowHidden=1
  let g:NERDTreeMapUpdir=''
  let g:NERDTreeShowBookmarks=1
  let g:NERDTreeMapOpenSplit='<C-j>'
  let g:NERDTreeMapOpenVSplit='<C-l>'
'''
[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
[[plugins]]
repo = 'ryanoasis/vim-devicons'

# vim-surround
[[plugins]]
repo = 'tpope/vim-surround'

# TODO: 動いて無さそう
# インクリメント/デクリメント を構文解析していい感じにしてくれる
[[plugins]]
repo = 'tpope/vim-speeddating'
# vim-surround 等の操作を . で繰り返す
[[plugins]]
repo = 'tpope/vim-repeat'
on_idle = 1

# インデント表示
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'

# 画面下部 line 表示
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {
        \ 'colorscheme': 'jellybeans',
        \ 'active': {
        \   'left': [ [ 'mode', 'paste' ],
        \             [ 'readonly', 'filename', 'fugitive' ] ]
        \ },
        \ 'component': {
        \   'readonly': '%{&filetype=="help"?"":&readonly?"⭤":""}',
        \   'fugitive': '%{fugitive#statusline()}',
        \ },
        \ 'component_visible_condition': {
        \   'readonly': '(&filetype!="help"&& &readonly)',
        \ },
        \ 'separator': { 'left': '⮀', 'right': '⮂' },
        \ 'subseparator': { 'left': '⮁', 'right': '⮃' }
        \ }
'''

# 文末空白の可視化
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'
hook_add = '''
  noremap tw :FixWhitespace<CR>:%s/\t/    /g<CR>
'''

# Git
[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
  nnoremap :gs :Gstatus
  nnoremap :ga :Gwrite
  nnoremap :gr :Gread
  nnoremap :gc :Gcommit
  nnoremap :gb :Gblame
  nnoremap :gd :Gdiff
  set statusline+=%{fugitive#statusline()}
'''
[[plugins]]
repo = 'hotwatermorning/auto-git-diff'
hook_add = '''
  let g:auto_git_diff_disable_auto_update = 1
  nmap <Leader>gd <Plug>(auto_git_diff_manual_update)
'''

# ssh 先も p でクリップボード共有
[[plugins]]
repo = 'haya14busa/vim-poweryank'
hook_add = '''
  map <Leader>y <Plug>(operator-poweryank-osc52)
'''

# table format
[[plugins]]
repo = 'godlygeek/tabular'

# 日本語の w, b, e 移動補助
[[plugins]]
repo = 'deton/jasegment.vim'

# オートセーブ
[[plugins]]
repo = 'vim-scripts/vim-auto-save'
hook_add = '''
  let g:auto_save = 1
  let g:auto_save_in_insert_mode = 0
'''

# vim からブラウザを開く
[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
  " Open URL
  nnoremap <Leader>o <Plug>(openbrowser-open)
  vnoremap <Leader>o <Plug>(openbrowser-open)
  " Search on Google
  nnoremap <Leader>g :<C-u>OpenBrowserSearch<Space><C-r><C-w><Enter>
'''

# QuickRun
[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  "set splitbelow
  call quickrun#module#register(shabadou#make_quickrun_hook_anim(
  \	"executing",
  \	['|','/','-','\'],
  \	12,
  \), 1)
  let g:quickrun_config = {
  \   "_" : {
  \       "hook/executing/enable" : 1,
  \       "hook/executing/wait" : 20,
  \       "outputter/buffer/split" : ":botright 8",
  \       "runner" : "vimproc",
  \       "runner/vimproc/updatetime" : 40,
  \   }
  \}
'''
[[plugins]]
repo = 'osyo-manga/shabadou.vim'

# vimproc
[[plugins]]
repo = 'Shougo/vimproc'

# メモ書き
[[plugins]]
repo = 'glidenote/memolist.vim'
hook_add = '''
  let g:memolist_memo_suffix = "md"
  if isdirectory($HOME . "/GoogleDrive")
    let g:memolist_path = $HOME . "/GoogleDrive/Memo"
  endif
'''

# f/F 拡張
[[plugins]]
repo = 'rhysd/clever-f.vim'

# Language Server
[[plugins]]
repo = 'prabirshrestha/vim-lsp'
[[plugins]]
repo = 'mattn/vim-lsp-settings'
[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
hook_add = '''
  inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
  inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
  inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<cr>"
  imap <c-space> <Plug>(asyncomplete_force_refresh)
  autocmd! CompleteDone * if pumvisible() == 0 | pclose | endif
'''
[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
[[plugins]]
repo = 'Shougo/neco-syntax'
[[plugins]]
repo = 'prabirshrestha/asyncomplete-buffer.vim'
[[plugins]]
repo = 'prabirshrestha/asyncomplete-necosyntax.vim'
hook_add = '''
  au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#necosyntax#get_source_options({
      \ 'name': 'necosyntax',
      \ 'allowlist': ['*'],
      \ 'completor': function('asyncomplete#sources#necosyntax#completor'),
      \ }))
'''
[[plugins]]
repo = 'prabirshrestha/asyncomplete-file.vim'
hook_add = '''
  au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#file#get_source_options({
      \ 'name': 'file',
      \ 'allowlist': ['*'],
      \ 'priority': 10,
      \ 'completor': function('asyncomplete#sources#file#completor')
      \ }))
'''

[[plugins]]
repo = 'mattn/vim-lsp-icons'
[[plugins]]
repo = 'hrsh7th/vim-vsnip'
[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'
