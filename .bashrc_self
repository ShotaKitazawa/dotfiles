# PS1
#PS1='\h:\W \u\$ '
# cannot use "sh"

export PS1='$(BRANCH=$(git branch --no-color 2>/dev/null | sed -ne "s/^\* \(.*\)$/\1/p"); if [ "$BRANCH" != "" ]; then if [ "$BRANCH" = "master" ]; then echo "\[\e[32m\]<\[\e[31m\]$BRANCH\[\e[32m\]>"; else echo "\[\e[32m\]<\[\e[33m\]$BRANCH\[\e[32m\]>"; fi; fi)\[\e[32m\][$(if [ "$(whoami)" = "root" ]; then echo "\[\e[31m\]"; fi)\u\[\e[32m\]@\h: \W]\[\e[0m\]\$ '

# vim
if which nvim > /dev/null 2>&1; then alias vim=nvim; fi

# alias
alias rm="rm -i"
alias cp="cp -i"
alias ssh-keyadd="ssh-add ~/.ssh/id_rsa*"
alias ssh-showpub="ssh-keygen -yf"
alias vimtmp='vim `date +%Y%m%d-%H%M%S`.txt'

# environment variable
bind '"\C-f": forward-word'
bind '"\C-b": backward-word'
export EDITOR=vim
export PATH=$PATH:~/bin
if [ "$SHELL" = "/bin/bash" ];then stty stop undef; fi

function ssh(){
  if which tmux > /dev/null 2>&1; then
    local window_name=$(tmux display -p '#{window_name}')
    command ssh $@
    tmux rename-window $window_name
  else
    command ssh $@
  fi
}

# for each OS
if [[ "$(uname)" = 'Darwin' ]]
then # macOS
  export OS='Mac'
  source ~/dotfiles/.bash_functions/mac

elif [[ "$(uname -r)" =~ ^.*-Microsoft$ ]]
then # Windows Subsystem for Linux
  export OS='WSL'
  source ~/dotfiles/.bash_functions/wsl

elif [[ "$(uname)" = 'Linux' ]]
then # Linux
  export OS='Linux'
  source ~/dotfiles/.bash_functions/linux

elif [[ "$(uname)" = 'FreeBSD' ]]
then # FreeBSD
  export OS='FreeBSD'
  alias l='ls'
  alias ll='ls -lG'
  alias lll='ls -alG'
  alias updatedb='/usr/libexec/locate.updatedb'
fi
