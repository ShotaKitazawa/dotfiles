# PS1
#PS1='\h:\W \u\$ '
# cannot use "sh"

export PS1='$(BRANCH=$(git branch --no-color 2>/dev/null | sed -ne "s/^\* \(.*\)$/\1/p"); if [ "$BRANCH" != "" ]; then if [ "$BRANCH" = "master" ]; then echo "\[\e[32m\]<\[\e[31m\]$BRANCH\[\e[32m\]>"; else echo "\[\e[32m\]<\[\e[33m\]$BRANCH\[\e[32m\]>"; fi; fi)\[\e[32m\][$(if [ "$(whoami)" = "root" ]; then echo "\[\e[31m\]"; fi)\u\[\e[32m\]@\h: \W]\[\e[0m\]\$ '

# vim
if which nvim > /dev/null 2>&1; then alias vim=nvim; fi

# alias
alias rm="rm -i"
alias cp="cp -i"
alias ssh-keyadd="ssh-add ~/.ssh/id_rsa*"
alias ssh-showpub="ssh-keygen -yf"
alias vimtmp='vim `date +%Y%m%d-%H%M%S`.txt'

# environment variable
export STUID=15k0112
export EDITOR=vim
export PYTHONPATH="~/.twitter:$PYTHONPATH"
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:~/bin
bind '"\C-f": forward-word'
bind '"\C-b": backward-word'
ulimit -c unlimited
if [ "$SHELL" = "/bin/bash" ];then stty stop undef; fi

# for each OS
if [ "$(uname)" = 'Darwin' ]
then # macOS
  OS='Mac'
  alias l='ls'
  alias ll='ls -lG'
  alias lll='ls -alG'
  alias updatedb='sudo /usr/libexec/locate.updatedb'
  # Slideshare can't display Japanese font. (created from Keynote)
  alias pdfconv="LANG=C LC_ALL=C sed -i '' s'|/Registry (Adobe) /Ordering (Japan1) /Supplement [0-9]|/Registry(Adobe) /Ordering(Identity) /Supplement 0|g'"
  alias vlc="/Applications/VLC.app/Contents/MacOS/VLC"
  alias wma2mp3='if [ ! -d mp3 ];then mkdir mp3; fi; for i in *; do vlc -I dummy --sout "#transcode{acodec=mp3,ab=128,channels=2,samplerate=44100}:std{access=file,mux=raw,dst=\"mp3/${i}.mp3\"}" "${i}" vlc://quit; done'
  export PATH=/usr/local/bin:$PATH
  export LANG=ja_JP.UTF-8
  export LESSCHARSET=utf-8
  if [ -f /usr/local/etc/bash_completion.d/git-prompt.sh ]; then
    . /usr/local/etc/bash_completion.d/git-prompt.sh
  fi
  if [ -f /usr/local/etc/bash_completion.d/git-completion.bash ];then
    . /usr/local/etc/bash_completion.d/git-completion.bash
  fi
  if [ -f `brew --prefix`/etc/bash_completion ]; then
    . `brew --prefix`/etc/bash_completion
  fi
  if [ -f /Applications/MacVim.app/Contents/Resources/vim/vimrc ];then
    mv /Applications/MacVim.app/Contents/Resources/vim/vimrc{,.default}
  fi
  if [ -f /Applications/MacVim.app/Contents/Resources/vim/gvimrc ];then
    mv /Applications/MacVim.app/Contents/Resources/vim/gvimrc{,.default}
  fi

elif [[ "$(uname -r)" =~ "^.*Microsoft$" ]]
then # Windows Subsystem for Linux
  OS='Linux'
  SSH_AGENT_FILE=$HOME/.ssh-agent
  test -f $SSH_AGENT_FILE && source $SSH_AGENT_FILE
  if ! ssh-add -l > /dev/null 2>&1; then
    ssh-agent > $SSH_AGENT_FILE
    source $SSH_AGENT_FILE
  fi

elif [ "$(uname)" = 'Linux' ]
then # Linux
  OS='Linux'
  alias l='ls'
  alias ll='ls -l --color'
  alias lll='ls -al --color'
  alias gcc32='gcc -m32 -fno-stack-protector'
  alias swapsearch='grep VmSwap /proc/*/status | sort -k 2 -r | head'
  if [ "$(which cmd.exe > /dev/null 2>&1; echo $?)" = 0 ]; then
    alias open="cmd.exe /c start"
  fi

elif [ "$(uname)" = 'FreeBSD' ]
then # FreeBSD
  OS='FreeBSD'
  alias l='ls'
  alias ll='ls -lG'
  alias lll='ls -alG'
  alias updatedb='/usr/libexec/locate.updatedb'
fi

# for tmux
get_load_average_tmux(){
  echo "(#[fg=yellow]$(uptime | awk '{print $(NF-2)}')#[default]) "
}
