#!/usr/bin/env sh

pyenv_setup(){
	git clone git://github.com/yyuu/pyenv.git ~/.pyenv > /dev/null 2>&1
	echo '' >> ~/.bashrc
	echo '# pyenv' >> ~/.bashrc
	echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
	echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
	echo 'eval "$(pyenv init -)"' >> ~/.bashrc
	tmp=`pyenv install --list | grep -G "^  [0-9][0-9|\.]*[0-9]$" |sort |tail -1`
	pyenv install $tmp > /dev/null 2>&1
	pyenv global $tmp > /dev/null 2>&1
	pyenv rehash > /dev/null 2>&1
	return 0;
}

brew_install () {
	which $1 > /dev/null 2>&1
	if [ $? != 0 ]; then
	echo "$1 will be installed."
	brew install tmux > /dev/null 2>&1
	if [ $? != 0 ]; then echo "ERROR: $1 can't be installed."; return 2; fi
	echo "$1 is installed."
	else
	echo "$1 is already installed."
	return 1
	fi
	return 0
}

yum_install () {
	which $1 > /dev/null 2>&1
	if [ $? != 0 ]; then
	echo "$1 will be installed."
	sudo yum install $1 -y > /dev/null 2>&1
	if [ $? != 0 ]; then echo "ERROR: $1 can't be installed."; return 2; fi
	echo "$1 is installed."
	else
	echo "$1 is already installed."
	return 1
	fi
	return 0
}

apt_install () {
	which $1 > /dev/null 2>&1
	if [ $? != 0 ]; then
	echo "$1 will be installed."
	sudo apt-get install $1 -y > /dev/null 2>&1
	if [ $? != 0 ]; then echo "ERROR: $1 can't be installed."; return 2; fi
	echo "$1 is installed."
	else
	echo "$1 is already installed."
	return 1
	fi
	return 0
}

pip_autoinstall() {
	sudo pip install pep8 pyflakes pytest pytest-pep8 > /dev/null 2>&1
}

# macOS
# On the premise that "Xcode", "Homebrew" are already installed.
## sudo xcode-select --install
## /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
if [ "$(uname)" == 'Darwin' ]; then

	# tmux install
	brew_install tmux

	# vim + lua
	brew_install lua
	if [ $? == 0 ]; then brew reinstall vim --with-lua > /dev/null 2>&1; fi
	brew_install clang-format

	# pyenv
	if [ ! -d ~/.pyenv ]; then
	pyenv_setup
	sudo easy_install pip > /dev/null 2>&1
	pip_autoinstall
	echo "Complete python Environment Setup. (pyenv is installed)"
	else
	echo "pyenv is already installed."
	fi

	exit 0

# Linux
elif [ "$(expr substr $(uname -s) 1 5)" == 'Linux' ]; then

# CentOS
if [ -f /etc/centos-release ]; then

	# Base install
	sudo yum install gcc gcc-c++ make git openssl-develã€€bzip2-devel zlib-devel readline-devel sqlite-devel bzip2 sqlite tmux epel-release -y > /dev/null 2>&1

	# vim + lua
	#TODO: ./configure --enable-perlinterp
	yum_install lua-devel
	yum_install perl-ExtUtils-Embed

	mkdir ~/install_tmp
	cd ~/install_tmp
	wget ftp://ftp.vim.org/pub/vim/unix/vim-7.4.tar.bz2 > /dev/null 2>&1
	sudo tar xvf vim-7.4.tar.bz2 > /dev/null 2>&1
	cd vim74
	sudo ./configure  --enable-multibyte  --with-features=huge  --enable-luainterp --enable-pythoninterp  --with-python-config-dir=/usr/lib64/python2.6/config  --enable-rubyinterp  --with-ruby-command=/usr/bin/ruby 
	sudo make
	sudo make install
	sudo rm -rf ~/install_tmp
	echo "Complete vim Environment Setup."

	fi

	# pyenv
	if [ ! -d ~/.pyenv ]; then
	pyenv_setup
	sudo yum install epel-release -y > /dev/null 2>&1
	sudo yum --enablerepo=epel install python-pip -y > /dev/null 2>&1
	pip install pip --upgrade > /dev/null 2>&1
	pip_autoinstall
	echo "Complete python Environment Setup. (pyenv is installed)"
	else
	echo "pyenv is already installed."
	fi

	exit 0

# Ubuntu
elif [ -f /etc/lsb-release ]; then

	# Base install
	sudo apt-get install git gcc make openssl libssl-dev libbz2-dev libreadline-dev libsqlite3-dev tmux -y

	# vim
	apt_install vim
	sudo aptitude install vim-gnome -y

	# pyenv
	if [ ! -d ~/.pyenv ]; then
	pyenv_setup
	apt_install python-pip
	pip_autoinstall
	echo "Complete python Environment Setup. (pyenv is installed)"
	else
	echo "pyenv is already installed."
	fi

	exit 0
# Other (Error)
else echo "Not Support This OS."; exit 1
fi
